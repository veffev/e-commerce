{"ast":null,"code":"var _jsxFileName = \"/Users/vfabrisv/Desktop/newProject/my-app/src/context/Context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nimport api from \"../api/api\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cart = /*#__PURE__*/createContext();\n\nconst Context = ({\n  children\n}) => {\n  _s();\n\n  const [cart, setCart] = useState([]);\n  const [isNotAvailable, setIsNotAvailable] = useState(false);\n  const price = cart.reduce((prev, current) => {\n    return prev + current.quantity * current.price;\n  }, 0);\n\n  const addCart = async product => {\n    const addProduct = cart.find(elem => elem.id === product.id);\n\n    if (addProduct) {\n      console.log(addProduct);\n      updateCart(addProduct.id, \"incr\");\n    } else {\n      try {\n        // await axios.post(`http://localhost:8080/addToCart/${product.id}`)\n        await api.addToCart(product.id); // setCart(cart.concat(product))\n\n        update();\n      } catch (err) {\n        setIsNotAvailable(err);\n        console.log(\"sono set\", isNotAvailable);\n\n        if (err.response) {\n          console.warn(err.response.data);\n        } else console.warn(err);\n      }\n    }\n  };\n\n  const update = async () => {\n    try {\n      const res = await api.getCartEndPoint(); // setCart((state)=>[...state, ...res.data.products])\n\n      setCart(res.data.products);\n    } catch (err) {\n      if (err.response) {\n        console.warn(err.response.data);\n      } else console.warn(err);\n    }\n  };\n\n  useEffect(() => {\n    update();\n  }, []);\n\n  const updateQuantity = async (idProduct, count) => {\n    const productUpddate = cart.find(product => product.id === idProduct);\n\n    try {\n      await api.getUpdateCartEndPoint(idProduct, {\n        quantity: productUpddate.quantity = count\n      });\n      update();\n    } catch (err) {\n      if (err.response) {\n        console.warn(err.response.data);\n      } else console.warn(err);\n    }\n  };\n\n  const updateCart = async (idProduct, str) => {\n    const productUpddate = cart.find(product => product.id === idProduct);\n\n    if (str === \"incr\") {\n      // const updateCartIncr=cart.map((elem)=>{\n      //   if(elem.id===idProduct)elem.quantity=elem.quantity+1\n      //   return elem\n      // })\n      // setCart([...cart],updateCartIncr)\n      try {\n        await api.getUpdateCartEndPoint(idProduct, {\n          quantity: productUpddate.quantity + 1\n        });\n        update();\n      } catch (err) {\n        if (err.response) {\n          console.warn(err.response.data);\n        } else console.warn(err);\n      }\n    }\n\n    if (str === \"decr\") {\n      // const updateCartDecr=cart.map((elem)=>{\n      //   if(elem.id===idProduct)elem.quantity=elem.quantity-1\n      //   return elem\n      // })\n      // setCart([...cart],updateCartDecr)\n      try {\n        await api.getUpdateCartEndPoint(idProduct, {\n          quantity: productUpddate.quantity - 1\n        });\n        update();\n      } catch (err) {\n        if (err.response) {\n          console.warn(err.response.data);\n        } else console.warn(err);\n      }\n    }\n\n    if (str === \"clearId\") {\n      // const deleteCartId=cart.filter((product)=>{if(product.id!==idProduct) return product})\n      // setCart(deleteCartId)\n      // const deleteCartId=cart.map((product)=>{if(product.id!==idProduct){product.quantity=0} return product})\n      // setCart([...cart],deleteCartId)\n      try {\n        await api.getUpdateCartEndPoint(idProduct, {\n          quantity: productUpddate.quantity = 0\n        });\n        update();\n      } catch (err) {\n        if (err.response) {\n          console.warn(err.response.data);\n        } else console.warn(err);\n      }\n    }\n  };\n\n  const clearCart = async () => {\n    try {\n      const res = await api.getEmptyCart();\n      setCart([]);\n      console.log(\"carrello svuotato\", res.data);\n    } catch (err) {\n      if (err.response) {\n        console.warn(err.response.data);\n      } else console.warn(err);\n    }\n  };\n\n  const checkout = async () => {\n    try {\n      const res = await api.getEmptyCart();\n      console.log(res.data);\n      setCart([]);\n    } catch (err) {\n      if (err.response) {\n        console.warn(err.response.data);\n      } else console.warn(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Cart.Provider, {\n    value: {\n      cart,\n      addCart,\n      updateCart,\n      clearCart,\n      checkout,\n      updateQuantity,\n      price\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Context, \"uIhvvH58jnqzSAA2QLoWSBdagM0=\");\n\n_c = Context;\nexport const CartState = () => {\n  _s2();\n\n  const context = useContext(Cart);\n\n  if (context === undefined) {\n    throw Error(\"Context deve essere usato dentro Cart.Provider\");\n  }\n\n  return context;\n};\n\n_s2(CartState, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\n_c2 = CartState;\nexport default Context;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Context\");\n$RefreshReg$(_c2, \"CartState\");","map":{"version":3,"sources":["/Users/vfabrisv/Desktop/newProject/my-app/src/context/Context.js"],"names":["createContext","useContext","useState","api","useEffect","Cart","Context","children","cart","setCart","isNotAvailable","setIsNotAvailable","price","reduce","prev","current","quantity","addCart","product","addProduct","find","elem","id","console","log","updateCart","addToCart","update","err","response","warn","data","res","getCartEndPoint","products","updateQuantity","idProduct","count","productUpddate","getUpdateCartEndPoint","str","clearCart","getEmptyCart","checkout","CartState","context","undefined","Error"],"mappings":"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","sourcesContent":["import { createContext, useContext, useState } from \"react\";\nimport api from \"../api/api\";\nimport { useEffect } from \"react\";\n\nconst Cart = createContext();\n\nconst Context = ({ children }) => {\n  const [cart, setCart] = useState([]);\n  const [isNotAvailable, setIsNotAvailable] = useState(false);\n\n  const price = cart.reduce((prev, current) => {\n    return prev + current.quantity * current.price;\n  }, 0);\n\n  const addCart = async (product) => {\n    const addProduct = cart.find((elem) => elem.id === product.id);\n    if (addProduct) {\n      console.log(addProduct);\n      updateCart(addProduct.id, \"incr\");\n    } else {\n      try {\n        // await axios.post(`http://localhost:8080/addToCart/${product.id}`)\n        await api.addToCart(product.id);\n        // setCart(cart.concat(product))\n        update();\n      } catch (err) {\n        setIsNotAvailable(err)\n        console.log(\"sono set\",isNotAvailable)\n        if (err.response) {\n          console.warn(err.response.data);\n        } else console.warn(err);\n        \n        \n      }\n    }\n  };\n\n  const update = async () => {\n    try {\n      const res = await api.getCartEndPoint();\n      // setCart((state)=>[...state, ...res.data.products])\n      setCart(res.data.products);\n    } catch (err) {\n      if (err.response) {\n        console.warn(err.response.data);\n      } else console.warn(err);\n    }\n  };\n\n  useEffect(() => {\n    update();\n  }, []);\n\n  const updateQuantity = async (idProduct, count) => {\n    const productUpddate = cart.find((product) => product.id === idProduct);\n    try {\n      await api.getUpdateCartEndPoint(idProduct, {\n        quantity: (productUpddate.quantity = count),\n      });\n      update();\n    } catch (err) {\n      if (err.response) {\n        console.warn(err.response.data);\n      } else console.warn(err);\n    }\n  };\n\n  const updateCart = async (idProduct, str) => {\n    const productUpddate = cart.find((product) => product.id === idProduct);\n    if (str === \"incr\") {\n      // const updateCartIncr=cart.map((elem)=>{\n      //   if(elem.id===idProduct)elem.quantity=elem.quantity+1\n      //   return elem\n      // })\n      // setCart([...cart],updateCartIncr)\n      try {\n        await api.getUpdateCartEndPoint(idProduct, {\n          quantity: productUpddate.quantity + 1,\n        });\n        update();\n      } catch (err) {\n        if (err.response) {\n          console.warn(err.response.data);\n        } else console.warn(err);\n      }\n    }\n    if (str === \"decr\") {\n      // const updateCartDecr=cart.map((elem)=>{\n      //   if(elem.id===idProduct)elem.quantity=elem.quantity-1\n      //   return elem\n      // })\n      // setCart([...cart],updateCartDecr)\n      try {\n        await api.getUpdateCartEndPoint(idProduct, {\n          quantity: productUpddate.quantity - 1,\n        });\n        update();\n      } catch (err) {\n        if (err.response) {\n          console.warn(err.response.data);\n        } else console.warn(err);\n      }\n    }\n    if (str === \"clearId\") {\n      // const deleteCartId=cart.filter((product)=>{if(product.id!==idProduct) return product})\n      // setCart(deleteCartId)\n      // const deleteCartId=cart.map((product)=>{if(product.id!==idProduct){product.quantity=0} return product})\n\n      // setCart([...cart],deleteCartId)\n      try {\n        await api.getUpdateCartEndPoint(idProduct, {\n          quantity: (productUpddate.quantity = 0),\n        });\n        update();\n      } catch (err) {\n        if (err.response) {\n          console.warn(err.response.data);\n        } else console.warn(err);\n      }\n    }\n  };\n\n  const clearCart = async () => {\n    try {\n      const res = await api.getEmptyCart();\n      setCart([]);\n      console.log(\"carrello svuotato\", res.data);\n    } catch (err) {\n      if (err.response) {\n        console.warn(err.response.data);\n      } else console.warn(err);\n    }\n  };\n\n  const checkout = async () => {\n    try {\n      const res = await api.getEmptyCart();\n      console.log(res.data);\n      setCart([]);\n    } catch (err) {\n      if (err.response) {\n        console.warn(err.response.data);\n      } else console.warn(err);\n    }\n  };\n\n  return (\n    <Cart.Provider\n      value={{\n        cart,\n        addCart,\n        updateCart,\n        clearCart,\n        checkout,\n        updateQuantity,\n        price,\n      }}\n    >\n      {children}\n    </Cart.Provider>\n  );\n};\n\nexport const CartState = () => {\n  const context = useContext(Cart);\n  if (context === undefined) {\n    throw Error(\"Context deve essere usato dentro Cart.Provider\");\n  }\n  return context;\n};\n\nexport default Context;\n"]},"metadata":{},"sourceType":"module"}