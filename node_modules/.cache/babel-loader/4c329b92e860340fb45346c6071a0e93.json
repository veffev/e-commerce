{"ast":null,"code":"var _jsxFileName = \"/Users/vfabrisv/Desktop/newProject/my-app/src/components/Counter.js\",\n    _s = $RefreshSig$();\n\nimport { CartState } from \"../context/Context\";\nimport Button from \"react-bootstrap/Button\";\nimport { useState } from 'react';\nimport \"../assets/counter.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Counter({\n  available,\n  quantityProduct,\n  productId,\n  productAmount\n}) {\n  _s();\n\n  const [counter, setCounter] = useState(quantityProduct);\n  const {\n    updateQuantity,\n    updateCart\n  } = CartState();\n\n  const addCount = () => {\n    if (counter > 0 && counter < available) setCounter(counter + 1);\n  };\n\n  const decrCount = () => {\n    if (counter > 0) setCounter(counter - 1);\n  };\n\n  const getAmount = (productAmount, productQuantity) => {\n    console.log(productAmount, productQuantity, \"sonon count\");\n    const singleAmount = productAmount * productQuantity;\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: [\"Amount: \", singleAmount, \"$\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"btn-counter\",\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-btn-counter\",\n      style: {\n        display: \"flex\",\n        alignItems: \"baseline\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => decrCount(),\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Quantity: \", counter]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => addCount(),\n        style: {},\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), getAmount(productAmount, quantityProduct)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-btn-counter\",\n      style: {\n        display: \"flex\",\n        justifyContent: \"start\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => updateQuantity(productId, counter),\n        style: {\n          marginRight: '10px'\n        },\n        children: \"Confirm quantity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => updateCart(productId, \"clearId\"),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Counter, \"YYtThOpcsYN8N77GaQQ5hmIWUiI=\");\n\n_c = Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/Users/vfabrisv/Desktop/newProject/my-app/src/components/Counter.js"],"names":["CartState","Button","useState","Counter","available","quantityProduct","productId","productAmount","counter","setCounter","updateQuantity","updateCart","addCount","decrCount","getAmount","productQuantity","console","log","singleAmount","display","alignItems","justifyContent","marginRight"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAAQC,QAAR,QAAsB,OAAtB;AACA,OAAO,uBAAP;;AAEA,eAAe,SAASC,OAAT,CAAiB;AAACC,EAAAA,SAAD;AAAWC,EAAAA,eAAX;AAA2BC,EAAAA,SAA3B;AAAqCC,EAAAA;AAArC,CAAjB,EAAqE;AAAA;;AAChF,QAAM,CAACC,OAAD,EAASC,UAAT,IAAqBP,QAAQ,CAACG,eAAD,CAAnC;AACA,QAAM;AAAEK,IAAAA,cAAF;AAAiBC,IAAAA;AAAjB,MAAgCX,SAAS,EAA/C;;AAEA,QAAMY,QAAQ,GAAC,MAAI;AACf,QAAGJ,OAAO,GAAC,CAAR,IAAaA,OAAO,GAACJ,SAAxB,EAAkCK,UAAU,CAACD,OAAO,GAAC,CAAT,CAAV;AAErC,GAHD;;AAKA,QAAMK,SAAS,GAAC,MAAI;AAChB,QAAGL,OAAO,GAAC,CAAX,EAAaC,UAAU,CAACD,OAAO,GAAC,CAAT,CAAV;AAChB,GAFD;;AAIA,QAAMM,SAAS,GAAG,CAACP,aAAD,EAAgBQ,eAAhB,KAAoC;AAClDC,IAAAA,OAAO,CAACC,GAAR,CAAYV,aAAZ,EAA0BQ,eAA1B,EAA0C,aAA1C;AACA,UAAMG,YAAY,GAAGX,aAAa,GAAGQ,eAArC;AACA,wBAAO;AAAA,6BAAM;AAAA,+BAAaG,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAN;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAJH;;AAMA,sBAAO;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAE;AAAV,KAApC;AAAA,4BACH;AAAK,MAAA,SAAS,EAAC,kBAAf;AACA,MAAA,KAAK,EAAE;AACHA,QAAAA,OAAO,EAAE,MADN;AAEHC,QAAAA,UAAU,EAAC;AAFR,OADP;AAAA,8BAOA,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAIP,SAAS,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPA,eAQA;AAAA,iCAAiBL,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cARA,eASA,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAII,QAAQ,EAA7B;AAAiC,QAAA,KAAK,EAAE,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATA,EAUCE,SAAS,CAACP,aAAD,EAAeF,eAAf,CAVV;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAcH;AAAK,MAAA,SAAS,EAAC,kBAAf;AACA,MAAA,KAAK,EAAE;AACHc,QAAAA,OAAO,EAAE,MADN;AAEHE,QAAAA,cAAc,EAAC;AAFZ,OADP;AAAA,8BAMA,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAIX,cAAc,CAACJ,SAAD,EAAWE,OAAX,CAAnC;AAAwD,QAAA,KAAK,EAAE;AAACc,UAAAA,WAAW,EAAC;AAAb,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANA,eAOA,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAIX,UAAU,CAACL,SAAD,EAAW,SAAX,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAyBH;;GA5CuBH,O;;KAAAA,O","sourcesContent":["import { CartState } from \"../context/Context\";\nimport Button from \"react-bootstrap/Button\";\nimport {useState}from 'react'\nimport \"../assets/counter.css\"\n\nexport default function Counter({available,quantityProduct,productId,productAmount}){\n    const [counter,setCounter]=useState(quantityProduct)\n    const { updateQuantity,updateCart } = CartState();\n\n    const addCount=()=>{\n        if(counter>0 && counter<available)setCounter(counter+1)\n        \n    }\n\n    const decrCount=()=>{\n        if(counter>0)setCounter(counter-1)\n    }\n\n    const getAmount = (productAmount, productQuantity) => {\n        console.log(productAmount,productQuantity,\"sonon count\")\n        const singleAmount = productAmount * productQuantity;\n        return <span><h6>Amount: {singleAmount}$</h6></span>;\n      };\n\n    return <div className=\"btn-counter\" style={{display: 'flex'}}>\n        <div className=\"flex-btn-counter\"\n        style={{\n            display: \"flex\",\n            alignItems:\"baseline\"\n        }}\n        >\n       \n        <Button onClick={()=>decrCount()}>-</Button>\n        <span>Quantity: {counter}</span>\n        <Button onClick={()=>addCount()} style={{}}>+</Button>\n        {getAmount(productAmount,quantityProduct)}\n        </div>\n        \n        <div className=\"flex-btn-counter\"\n        style={{\n            display: \"flex\",\n            justifyContent:\"start\"\n        }}\n        >  \n        <Button onClick={()=>updateQuantity(productId,counter)} style={{marginRight:'10px'}} >Confirm quantity</Button>\n        <Button onClick={()=>updateCart(productId,\"clearId\")}>X</Button>\n        </div>\n        \n    </div>\n}"]},"metadata":{},"sourceType":"module"}