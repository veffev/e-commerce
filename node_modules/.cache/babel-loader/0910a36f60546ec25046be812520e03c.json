{"ast":null,"code":"var _jsxFileName = \"/Users/vfabrisv/Desktop/newProject/my-app/src/context/Context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from 'react';\nimport api from '../api/api';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cart = /*#__PURE__*/createContext();\n\nconst Context = ({\n  children\n}) => {\n  _s();\n\n  const [cart, setCart] = useState([]);\n\n  const addCart = async product => {\n    try {\n      // await axios.post(`http://localhost:8080/addToCart/${product.id}`)\n      await api.addToCart(product.id); // setCart(cart.concat(product))\n\n      update();\n    } catch (err) {\n      if (err.response) {\n        console.warn(err.response.data);\n      } else console.warn(err);\n    }\n  };\n\n  const update = async () => {\n    try {\n      const res = await api.getCartEndPoint(); // setCart((state)=>[...state, ...res.data.products])\n\n      setCart(res.data.products);\n    } catch (err) {\n      if (err.response) {\n        console.warn(err.response.data);\n      } else console.warn(err);\n    }\n  };\n\n  useEffect(() => {\n    update();\n  }, []);\n\n  const updateCart = async (idProduct, str) => {\n    const productUpddate = cart.find(product => product.id === idProduct);\n\n    if (str === \"incr\") {\n      // const updateCartIncr=cart.map((elem)=>{\n      //   if(elem.id===idProduct)elem.quantity=elem.quantity+1\n      //   return elem\n      // })\n      // setCart([...cart],updateCartIncr)\n      await api.getUpdateCartEndPoint(idProduct, {\n        quantity: productUpddate.quantity + 1\n      });\n      update();\n    }\n\n    if (str === \"decr\") {\n      // const updateCartDecr=cart.map((elem)=>{\n      //   if(elem.id===idProduct)elem.quantity=elem.quantity-1\n      //   return elem\n      // })\n      // setCart([...cart],updateCartDecr)\n      await api.getUpdateCartEndPoint(idProduct, {\n        quantity: productUpddate.quantity - 1\n      });\n      update();\n    }\n\n    if (str === \"clearId\") {\n      // const deleteCartId=cart.filter((product)=>{if(product.id!==idProduct) return product})\n      // setCart(deleteCartId)\n      // const deleteCartId=cart.map((product)=>{if(product.id!==idProduct){product.quantity=0} return product})\n      await api.getUpdateCartEndPoint(idProduct, {\n        quantity: productUpddate.quantity = 0\n      });\n      update(); // setCart([...cart],deleteCartId)\n    }\n  };\n\n  const clearCart = async () => {\n    const res = await api.getEmptyCart();\n    setCart([]);\n    console.log(\"carrello svuotato\", res.data);\n  };\n\n  const checkout = async () => {\n    const res = await api.getEmptyCart();\n    setCart([]);\n    console.log(\"checkout res: \", res.data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Cart.Provider, {\n    value: {\n      cart,\n      addCart,\n      updateCart,\n      clearCart,\n      checkout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Context, \"VKnK7AzZ2p0f1mPOHSL90sL7q+U=\");\n\n_c = Context;\nexport const CartState = () => {\n  _s2();\n\n  const context = useContext(Cart);\n\n  if (context === undefined) {\n    throw Error(\"Context deve essere usato dentro Cart.Provider\");\n  }\n\n  return context;\n};\n\n_s2(CartState, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\n_c2 = CartState;\nexport default Context;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Context\");\n$RefreshReg$(_c2, \"CartState\");","map":{"version":3,"sources":["/Users/vfabrisv/Desktop/newProject/my-app/src/context/Context.js"],"names":["createContext","useContext","useState","api","useEffect","Cart","Context","children","cart","setCart","addCart","product","addToCart","id","update","err","response","console","warn","data","res","getCartEndPoint","products","updateCart","idProduct","str","productUpddate","find","getUpdateCartEndPoint","quantity","clearCart","getEmptyCart","log","checkout","CartState","context","undefined","Error"],"mappings":"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","sourcesContent":["import {createContext, useContext, useState} from 'react'\nimport api from '../api/api'\nimport {useEffect} from 'react'\n\nconst Cart=createContext();\n\nconst Context=({children})=>{\n    const [cart,setCart]=useState([])\n\n    const addCart =async (product)=>{\n       try{\n          // await axios.post(`http://localhost:8080/addToCart/${product.id}`)\n        await api.addToCart(product.id)\n        // setCart(cart.concat(product))\n        update()\n       }\n       catch(err){\n        if(err.response){\n          console.warn(err.response.data)\n        }\n        else console.warn(err)\n      }\n    }\n\n    const update=async()=>{\n      try{\n        const res=await api.getCartEndPoint()\n        // setCart((state)=>[...state, ...res.data.products])\n        setCart(res.data.products)\n      }\n      catch(err){\n        if(err.response){\n          console.warn(err.response.data)\n        }\n        else console.warn(err)\n      }\n    }\n\n      useEffect(() => {\n        update()\n      },[])\n\n    const updateCart=async (idProduct,str)=>{\n     \n      const productUpddate=cart.find((product)=>product.id===idProduct)\n      if(str===\"incr\"){\n        // const updateCartIncr=cart.map((elem)=>{\n        //   if(elem.id===idProduct)elem.quantity=elem.quantity+1\n        //   return elem\n        // })\n        // setCart([...cart],updateCartIncr)\n        \n        await api.getUpdateCartEndPoint(idProduct,{quantity:productUpddate.quantity+1})\n        update()\n      }\n      if(str===\"decr\"){\n        // const updateCartDecr=cart.map((elem)=>{\n        //   if(elem.id===idProduct)elem.quantity=elem.quantity-1\n        //   return elem\n        // })\n        // setCart([...cart],updateCartDecr)\n        await api.getUpdateCartEndPoint(idProduct,{quantity:productUpddate.quantity-1})\n        update()\n      }\n      if(str===\"clearId\")\n      {\n        // const deleteCartId=cart.filter((product)=>{if(product.id!==idProduct) return product})\n        // setCart(deleteCartId)\n        // const deleteCartId=cart.map((product)=>{if(product.id!==idProduct){product.quantity=0} return product})\n        await api.getUpdateCartEndPoint(idProduct,{quantity:productUpddate.quantity=0})\n        update()\n        // setCart([...cart],deleteCartId)\n      }\n    }\n\n    const clearCart= async ()=>{\n        const res=await api.getEmptyCart()\n        setCart([])\n        console.log(\"carrello svuotato\",res.data)\n    }\n\n    const checkout=async()=>{\n        const res=await api.getEmptyCart()\n        setCart([])\n        console.log(\"checkout res: \",res.data)\n    }\n\n    return (\n        <Cart.Provider value={{cart,addCart,updateCart,clearCart,checkout}}>\n            {children}\n        </Cart.Provider>\n    )\n}\n\nexport const CartState=()=>{\n    const context=useContext(Cart);\n    if(context===undefined)\n    {\n      throw Error(\"Context deve essere usato dentro Cart.Provider\")\n    }\n    return context\n}\n\nexport default Context;"]},"metadata":{},"sourceType":"module"}