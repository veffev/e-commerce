{"ast":null,"code":"var _jsxFileName = \"/Users/vfabrisv/Desktop/newProject/my-app/src/context/Context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from 'react';\nimport axios from \"axios\";\nimport api from '../api/api';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cart = /*#__PURE__*/createContext();\n\nconst Context = ({\n  children\n}) => {\n  _s();\n\n  const [cart, setCart] = useState([]);\n\n  const addCart = async product => {\n    // const isExist=cart.filter(elem=>elem.id===product.id)\n    // if(isExist)\n    // {\n    //   return \n    // }\n    await axios.post(`http://localhost:8080/addToCart/${product.id}`);\n    setCart(cart.concat(product)); //cart.concat ti ritorna una copia \n  };\n\n  useEffect(() => {\n    (async () => {\n      const res = await api.getCartEndPoint();\n      setCart(state => [...state, ...res.data.products]);\n    })();\n  }, []);\n\n  const updateCart = idProduct => {\n    const updateCart = cart.map(elem => {\n      if (elem.id === idProduct) elem.quantity = elem.quantity + 1;\n      return elem;\n    });\n    setCart([...cart], updateCart);\n    console.log(cart); // (async()=>{\n    //   const res=await api.getUpdateCartEndPoint(idProduct)\n    //   // setCart({...cart, quantity: res.data.products.quantity+1})\n    // })\n  };\n\n  return /*#__PURE__*/_jsxDEV(Cart.Provider, {\n    value: {\n      cart,\n      addCart,\n      updateCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Context, \"VKnK7AzZ2p0f1mPOHSL90sL7q+U=\");\n\n_c = Context;\nexport const CartState = () => {\n  _s2();\n\n  const context = useContext(Cart);\n\n  if (context === undefined) {\n    throw Error(\"Context deve essere usato dentro Cart.Provider\");\n  }\n\n  return context;\n};\n\n_s2(CartState, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\n_c2 = CartState;\nexport default Context;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Context\");\n$RefreshReg$(_c2, \"CartState\");","map":{"version":3,"sources":["/Users/vfabrisv/Desktop/newProject/my-app/src/context/Context.js"],"names":["createContext","useContext","useState","axios","api","useEffect","Cart","Context","children","cart","setCart","addCart","product","post","id","concat","res","getCartEndPoint","state","data","products","updateCart","idProduct","map","elem","quantity","console","log","CartState","context","undefined","Error"],"mappings":";;;;AAAA,SAAQA,aAAR,EAAuBC,UAAvB,EAAmCC,QAAnC,QAAkD,OAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,SAAQC,SAAR,QAAwB,OAAxB;;AAEA,MAAMC,IAAI,gBAACN,aAAa,EAAxB;;AAEA,MAAMO,OAAO,GAAC,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAeR,QAAQ,CAAC,EAAD,CAA7B;;AAEA,QAAMS,OAAO,GAAE,MAAOC,OAAP,IAAiB;AAC5B;AACA;AACA;AACA;AACA;AAEA,UAAMT,KAAK,CAACU,IAAN,CAAY,mCAAkCD,OAAO,CAACE,EAAG,EAAzD,CAAN;AACAJ,IAAAA,OAAO,CAACD,IAAI,CAACM,MAAL,CAAYH,OAAZ,CAAD,CAAP,CAR4B,CAS5B;AACD,GAVH;;AAaEP,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAS;AACR,YAAMW,GAAG,GAAC,MAAMZ,GAAG,CAACa,eAAJ,EAAhB;AACAP,MAAAA,OAAO,CAAEQ,KAAD,IAAS,CAAC,GAAGA,KAAJ,EAAW,GAAGF,GAAG,CAACG,IAAJ,CAASC,QAAvB,CAAV,CAAP;AACD,KAHD;AAIH,GALU,EAKT,EALS,CAAT;;AAOF,QAAMC,UAAU,GAAEC,SAAD,IAAa;AAE5B,UAAMD,UAAU,GAACZ,IAAI,CAACc,GAAL,CAAUC,IAAD,IAAQ;AAChC,UAAGA,IAAI,CAACV,EAAL,KAAUQ,SAAb,EAAuBE,IAAI,CAACC,QAAL,GAAcD,IAAI,CAACC,QAAL,GAAc,CAA5B;AACvB,aAAOD,IAAP;AACD,KAHgB,CAAjB;AAIAd,IAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,CAAD,EAAWY,UAAX,CAAP;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYlB,IAAZ,EAP4B,CAS5B;AACA;AACA;AACA;AACD,GAbD;;AAeA,sBACI,QAAC,IAAD,CAAM,QAAN;AAAe,IAAA,KAAK,EAAE;AAACA,MAAAA,IAAD;AAAME,MAAAA,OAAN;AAAcU,MAAAA;AAAd,KAAtB;AAAA,cACKb;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA3CD;;GAAMD,O;;KAAAA,O;AA6CN,OAAO,MAAMqB,SAAS,GAAC,MAAI;AAAA;;AACvB,QAAMC,OAAO,GAAC5B,UAAU,CAACK,IAAD,CAAxB;;AACA,MAAGuB,OAAO,KAAGC,SAAb,EACA;AACE,UAAMC,KAAK,CAAC,gDAAD,CAAX;AACD;;AACD,SAAOF,OAAP;AACH,CAPM;;IAAMD,S;;MAAAA,S;AASb,eAAerB,OAAf","sourcesContent":["import {createContext, useContext, useState} from 'react'\nimport axios from \"axios\"\nimport api from '../api/api'\nimport {useEffect} from 'react'\n\nconst Cart=createContext();\n\nconst Context=({children})=>{\n    const [cart,setCart]=useState([])\n\n    const addCart =async (product)=>{\n        // const isExist=cart.filter(elem=>elem.id===product.id)\n        // if(isExist)\n        // {\n        //   return \n        // }\n        \n        await axios.post(`http://localhost:8080/addToCart/${product.id}`)\n        setCart(cart.concat(product))\n        //cart.concat ti ritorna una copia \n      }\n\n\n      useEffect(() => {\n        (async()=>{\n          const res=await api.getCartEndPoint()\n          setCart((state)=>[...state, ...res.data.products])\n        })()\n    },[])\n\n    const updateCart=(idProduct)=>{\n\n      const updateCart=cart.map((elem)=>{\n        if(elem.id===idProduct)elem.quantity=elem.quantity+1\n        return elem\n      })\n      setCart([...cart],updateCart)\n      console.log(cart)\n\n      // (async()=>{\n      //   const res=await api.getUpdateCartEndPoint(idProduct)\n      //   // setCart({...cart, quantity: res.data.products.quantity+1})\n      // })\n    }\n\n    return (\n        <Cart.Provider value={{cart,addCart,updateCart}}>\n            {children}\n        </Cart.Provider>\n    )\n}\n\nexport const CartState=()=>{\n    const context=useContext(Cart);\n    if(context===undefined)\n    {\n      throw Error(\"Context deve essere usato dentro Cart.Provider\")\n    }\n    return context\n}\n\nexport default Context;"]},"metadata":{},"sourceType":"module"}