{"ast":null,"code":"var _jsxFileName = \"/Users/vfabrisv/Desktop/newProject/my-app/src/components/Counter.js\",\n    _s = $RefreshSig$();\n\nimport { CartState } from \"../context/Context\";\nimport Button from \"react-bootstrap/Button\";\nimport { useState } from 'react';\nimport \"../assets/counter.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Counter({\n  available,\n  quantityProduct,\n  productId,\n  productAmount\n}) {\n  _s();\n\n  const [counter, setCounter] = useState(quantityProduct);\n  const {\n    updateQuantity,\n    updateCart\n  } = CartState();\n\n  const addCount = () => {\n    if (counter > available) return;else setCounter(counter + 1);\n  };\n\n  const decrCount = () => {\n    if (counter !== 0) setCounter(counter - 1);\n  };\n\n  const getAmount = (productAmount, productQuantity) => {\n    console.log(productAmount, productQuantity, \"sonon count\");\n    const singleAmount = productAmount * productQuantity;\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: [\"Amount: \", singleAmount, \"$\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"btn-counter\",\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-btn-counter\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => decrCount(),\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Quantity: \", counter]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => addCount(),\n        style: {},\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => updateQuantity(productId, counter),\n        children: \"Confirm quantity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), getAmount(productAmount, quantityProduct), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-btn-counter\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => updateCart(productId, \"clearId\"),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Counter, \"YYtThOpcsYN8N77GaQQ5hmIWUiI=\");\n\n_c = Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/Users/vfabrisv/Desktop/newProject/my-app/src/components/Counter.js"],"names":["CartState","Button","useState","Counter","available","quantityProduct","productId","productAmount","counter","setCounter","updateQuantity","updateCart","addCount","decrCount","getAmount","productQuantity","console","log","singleAmount","display"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAAQC,QAAR,QAAsB,OAAtB;AACA,OAAO,uBAAP;;AAEA,eAAe,SAASC,OAAT,CAAiB;AAACC,EAAAA,SAAD;AAAWC,EAAAA,eAAX;AAA2BC,EAAAA,SAA3B;AAAqCC,EAAAA;AAArC,CAAjB,EAAqE;AAAA;;AAChF,QAAM,CAACC,OAAD,EAASC,UAAT,IAAqBP,QAAQ,CAACG,eAAD,CAAnC;AACA,QAAM;AAAEK,IAAAA,cAAF;AAAiBC,IAAAA;AAAjB,MAAgCX,SAAS,EAA/C;;AAEA,QAAMY,QAAQ,GAAC,MAAI;AACf,QAAGJ,OAAO,GAACJ,SAAX,EAAqB,OAArB,KACKK,UAAU,CAACD,OAAO,GAAC,CAAT,CAAV;AACR,GAHD;;AAKA,QAAMK,SAAS,GAAC,MAAI;AAChB,QAAGL,OAAO,KAAG,CAAb,EAAeC,UAAU,CAACD,OAAO,GAAC,CAAT,CAAV;AAClB,GAFD;;AAIA,QAAMM,SAAS,GAAG,CAACP,aAAD,EAAgBQ,eAAhB,KAAoC;AAClDC,IAAAA,OAAO,CAACC,GAAR,CAAYV,aAAZ,EAA0BQ,eAA1B,EAA0C,aAA1C;AACA,UAAMG,YAAY,GAAGX,aAAa,GAAGQ,eAArC;AACA,wBAAO;AAAA,6BAAM;AAAA,+BAAaG,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAN;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAJH;;AAMA,sBAAO;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAE;AAAV,KAApC;AAAA,4BACH;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACA,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAIN,SAAS,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,iCAAiBL,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAII,QAAQ,EAA7B;AAAiC,QAAA,KAAK,EAAE,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA,eAIA,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAIF,cAAc,CAACJ,SAAD,EAAWE,OAAX,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,EAOFM,SAAS,CAACP,aAAD,EAAeF,eAAf,CAPP,eAQH;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BAEA,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAIM,UAAU,CAACL,SAAD,EAAW,SAAX,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,YARG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAcH;;GAjCuBH,O;;KAAAA,O","sourcesContent":["import { CartState } from \"../context/Context\";\nimport Button from \"react-bootstrap/Button\";\nimport {useState}from 'react'\nimport \"../assets/counter.css\"\n\nexport default function Counter({available,quantityProduct,productId,productAmount}){\n    const [counter,setCounter]=useState(quantityProduct)\n    const { updateQuantity,updateCart } = CartState();\n\n    const addCount=()=>{\n        if(counter>available)return\n        else setCounter(counter+1)\n    }\n\n    const decrCount=()=>{\n        if(counter!==0)setCounter(counter-1)\n    }\n\n    const getAmount = (productAmount, productQuantity) => {\n        console.log(productAmount,productQuantity,\"sonon count\")\n        const singleAmount = productAmount * productQuantity;\n        return <span><h6>Amount: {singleAmount}$</h6></span>;\n      };\n\n    return <div className=\"btn-counter\" style={{display: 'flex'}}>\n        <div className=\"flex-btn-counter\">\n        <Button onClick={()=>decrCount()}>-</Button>\n        <span>Quantity: {counter}</span>\n        <Button onClick={()=>addCount()} style={{}}>+</Button>\n        <Button onClick={()=>updateQuantity(productId,counter)}>Confirm quantity</Button>\n        </div>\n        {getAmount(productAmount,quantityProduct)}\n        <div className=\"flex-btn-counter\">  \n        \n        <Button onClick={()=>updateCart(productId,\"clearId\")}>X</Button>\n        </div>\n        \n    </div>\n}"]},"metadata":{},"sourceType":"module"}