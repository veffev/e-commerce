{"ast":null,"code":"var _jsxFileName = \"/Users/vfabrisv/Desktop/newProject/my-app/src/context/Context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from 'react';\nimport axios from \"axios\";\nimport api from '../api/api';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cart = /*#__PURE__*/createContext();\n\nconst Context = ({\n  children\n}) => {\n  _s();\n\n  const [cart, setCart] = useState([]);\n\n  const addCart = async product => {\n    // await axios.post(`http://localhost:8080/addToCart/${product.id}`)\n    await api.addToCart(product.id);\n    setCart(cart.concat(product));\n  };\n\n  const update = async () => {\n    const res = await api.getCartEndPoint(); // setCart((state)=>[...state, ...res.data.products])\n\n    setCart(res.data.products);\n  };\n\n  useEffect(() => {\n    update();\n  }, []);\n\n  const updateCart = async (idProduct, str) => {\n    const productUpddate = cart.find(product => product.id === idProduct);\n\n    if (str === \"incr\") {\n      // const updateCartIncr=cart.map((elem)=>{\n      //   if(elem.id===idProduct)elem.quantity=elem.quantity+1\n      //   return elem\n      // })\n      await api.getUpdateCartEndPoint(idProduct, {\n        quantity: productUpddate.quantity + 1\n      });\n      update(); // setCart([...cart],updateCartIncr)\n\n      console.log(\"incr\", cart);\n    }\n\n    if (str === \"decr\") {\n      // const updateCartDecr=cart.map((elem)=>{\n      //   if(elem.id===idProduct)elem.quantity=elem.quantity-1\n      //   return elem\n      // })\n      // setCart([...cart],updateCartDecr)\n      await api.getUpdateCartEndPoint(idProduct, {\n        quantity: productUpddate.quantity - 1\n      });\n      update();\n    }\n\n    if (str === \"clearId\") {\n      // const deleteCartId=cart.filter((product)=>{if(product.id!==idProduct) return product})\n      // setCart(deleteCartId)\n      const deleteCartId = cart.map(product => {\n        if (product.id !== idProduct) {\n          product.quantity = 0;\n        }\n\n        return product;\n      });\n      setCart([...cart], deleteCartId);\n    }\n  };\n\n  const clearCart = () => {\n    const deleteAll = [];\n    setCart(deleteAll);\n    console.log(\"sono clearId\", cart);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Cart.Provider, {\n    value: {\n      cart,\n      addCart,\n      updateCart,\n      clearCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Context, \"VKnK7AzZ2p0f1mPOHSL90sL7q+U=\");\n\n_c = Context;\nexport const CartState = () => {\n  _s2();\n\n  const context = useContext(Cart);\n\n  if (context === undefined) {\n    throw Error(\"Context deve essere usato dentro Cart.Provider\");\n  }\n\n  return context;\n};\n\n_s2(CartState, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\n_c2 = CartState;\nexport default Context;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Context\");\n$RefreshReg$(_c2, \"CartState\");","map":{"version":3,"sources":["/Users/vfabrisv/Desktop/newProject/my-app/src/context/Context.js"],"names":["createContext","useContext","useState","axios","api","useEffect","Cart","Context","children","cart","setCart","addCart","product","addToCart","id","concat","update","res","getCartEndPoint","data","products","updateCart","idProduct","str","productUpddate","find","getUpdateCartEndPoint","quantity","console","log","deleteCartId","map","clearCart","deleteAll","CartState","context","undefined","Error"],"mappings":"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","sourcesContent":["import {createContext, useContext, useState} from 'react'\nimport axios from \"axios\"\nimport api from '../api/api'\nimport {useEffect} from 'react'\n\nconst Cart=createContext();\n\nconst Context=({children})=>{\n    const [cart,setCart]=useState([])\n\n    const addCart =async (product)=>{\n        // await axios.post(`http://localhost:8080/addToCart/${product.id}`)\n        await api.addToCart(product.id)\n        setCart(cart.concat(product))\n      }\n\n    const update=async()=>{\n      const res=await api.getCartEndPoint()\n      // setCart((state)=>[...state, ...res.data.products])\n      setCart(res.data.products)\n    }\n\n      useEffect(() => {\n        update()\n      },[])\n\n    const updateCart=async (idProduct,str)=>{\n     \n      const productUpddate=cart.find((product)=>product.id===idProduct)\n      if(str===\"incr\"){\n        // const updateCartIncr=cart.map((elem)=>{\n        //   if(elem.id===idProduct)elem.quantity=elem.quantity+1\n        //   return elem\n        // })\n        \n        await api.getUpdateCartEndPoint(idProduct,{quantity:productUpddate.quantity+1})\n        update()\n        // setCart([...cart],updateCartIncr)\n        console.log(\"incr\",cart)\n      }\n      if(str===\"decr\"){\n        // const updateCartDecr=cart.map((elem)=>{\n        //   if(elem.id===idProduct)elem.quantity=elem.quantity-1\n        //   return elem\n        // })\n        // setCart([...cart],updateCartDecr)\n        await api.getUpdateCartEndPoint(idProduct,{quantity:productUpddate.quantity-1})\n        update()\n      }\n      if(str===\"clearId\")\n      {\n        // const deleteCartId=cart.filter((product)=>{if(product.id!==idProduct) return product})\n        // setCart(deleteCartId)\n        const deleteCartId=cart.map((product)=>{if(product.id!==idProduct){product.quantity=0} return product})\n        setCart([...cart],deleteCartId)\n        \n      }\n    }\n\n    const clearCart=()=>{\n      const deleteAll=[];\n        setCart(deleteAll)\n        console.log(\"sono clearId\",cart)\n    }\n\n    return (\n        <Cart.Provider value={{cart,addCart,updateCart,clearCart}}>\n            {children}\n        </Cart.Provider>\n    )\n}\n\nexport const CartState=()=>{\n    const context=useContext(Cart);\n    if(context===undefined)\n    {\n      throw Error(\"Context deve essere usato dentro Cart.Provider\")\n    }\n    return context\n}\n\nexport default Context;"]},"metadata":{},"sourceType":"module"}