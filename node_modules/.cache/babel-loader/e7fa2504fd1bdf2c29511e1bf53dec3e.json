{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar EVENT_NAME_MAP = {\n  transitionend: {\n    transition: 'transitionend',\n    WebkitTransition: 'webkitTransitionEnd',\n    MozTransition: 'mozTransitionEnd',\n    OTransition: 'oTransitionEnd',\n    msTransition: 'MSTransitionEnd'\n  },\n  animationend: {\n    animation: 'animationend',\n    WebkitAnimation: 'webkitAnimationEnd',\n    MozAnimation: 'mozAnimationEnd',\n    OAnimation: 'oAnimationEnd',\n    msAnimation: 'MSAnimationEnd'\n  }\n};\nvar endEvents = [];\n\nfunction detectEvents() {\n  var testEl = document.createElement('div');\n  var style = testEl.style;\n\n  if (!('AnimationEvent' in window)) {\n    delete EVENT_NAME_MAP.animationend.animation;\n  }\n\n  if (!('TransitionEvent' in window)) {\n    delete EVENT_NAME_MAP.transitionend.transition;\n  }\n\n  for (var baseEventName in EVENT_NAME_MAP) {\n    var baseEvents = EVENT_NAME_MAP[baseEventName];\n\n    for (var styleName in baseEvents) {\n      if (styleName in style) {\n        endEvents.push(baseEvents[styleName]);\n        break;\n      }\n    }\n  }\n}\n\nif (ExecutionEnvironment.canUseDOM) {\n  detectEvents();\n} // We use the raw {add|remove}EventListener() call because EventListener\n// does not know how to remove event listeners and we really should\n// clean up. Also, these events are not triggered in older browsers\n// so we should be A-OK here.\n\n\nfunction addEventListener(node, eventName, eventListener) {\n  node.addEventListener(eventName, eventListener, false);\n}\n\nfunction removeEventListener(node, eventName, eventListener) {\n  node.removeEventListener(eventName, eventListener, false);\n}\n\nvar ReactTransitionEvents = {\n  addEndEventListener: function addEndEventListener(node, eventListener) {\n    if (endEvents.length === 0) {\n      // If CSS transitions are not supported, trigger an \"end animation\"\n      // event immediately.\n      window.setTimeout(eventListener, 0);\n      return;\n    }\n\n    endEvents.forEach(function (endEvent) {\n      addEventListener(node, endEvent, eventListener);\n    });\n  },\n  removeEndEventListener: function removeEndEventListener(node, eventListener) {\n    if (endEvents.length === 0) {\n      return;\n    }\n\n    endEvents.forEach(function (endEvent) {\n      removeEventListener(node, endEvent, eventListener);\n    });\n  }\n};\nexports.default = ReactTransitionEvents;","map":{"version":3,"sources":["/Users/vfabrisv/Desktop/newProject/my-app/node_modules/animate.css-react/build/libs/React16TransitionEvents.js"],"names":["Object","defineProperty","exports","value","ExecutionEnvironment","require","EVENT_NAME_MAP","transitionend","transition","WebkitTransition","MozTransition","OTransition","msTransition","animationend","animation","WebkitAnimation","MozAnimation","OAnimation","msAnimation","endEvents","detectEvents","testEl","document","createElement","style","window","baseEventName","baseEvents","styleName","push","canUseDOM","addEventListener","node","eventName","eventListener","removeEventListener","ReactTransitionEvents","addEndEventListener","length","setTimeout","forEach","endEvent","removeEndEventListener","default"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar EVENT_NAME_MAP = {\n  transitionend: {\n    transition: 'transitionend',\n    WebkitTransition: 'webkitTransitionEnd',\n    MozTransition: 'mozTransitionEnd',\n    OTransition: 'oTransitionEnd',\n    msTransition: 'MSTransitionEnd'\n  },\n\n  animationend: {\n    animation: 'animationend',\n    WebkitAnimation: 'webkitAnimationEnd',\n    MozAnimation: 'mozAnimationEnd',\n    OAnimation: 'oAnimationEnd',\n    msAnimation: 'MSAnimationEnd'\n  }\n};\n\nvar endEvents = [];\n\nfunction detectEvents() {\n  var testEl = document.createElement('div');\n  var style = testEl.style;\n\n  if (!('AnimationEvent' in window)) {\n    delete EVENT_NAME_MAP.animationend.animation;\n  }\n\n  if (!('TransitionEvent' in window)) {\n    delete EVENT_NAME_MAP.transitionend.transition;\n  }\n\n  for (var baseEventName in EVENT_NAME_MAP) {\n    var baseEvents = EVENT_NAME_MAP[baseEventName];\n    for (var styleName in baseEvents) {\n      if (styleName in style) {\n        endEvents.push(baseEvents[styleName]);\n        break;\n      }\n    }\n  }\n}\n\nif (ExecutionEnvironment.canUseDOM) {\n  detectEvents();\n}\n\n// We use the raw {add|remove}EventListener() call because EventListener\n// does not know how to remove event listeners and we really should\n// clean up. Also, these events are not triggered in older browsers\n// so we should be A-OK here.\n\nfunction addEventListener(node, eventName, eventListener) {\n  node.addEventListener(eventName, eventListener, false);\n}\n\nfunction removeEventListener(node, eventName, eventListener) {\n  node.removeEventListener(eventName, eventListener, false);\n}\n\nvar ReactTransitionEvents = {\n  addEndEventListener: function addEndEventListener(node, eventListener) {\n    if (endEvents.length === 0) {\n      // If CSS transitions are not supported, trigger an \"end animation\"\n      // event immediately.\n      window.setTimeout(eventListener, 0);\n      return;\n    }\n    endEvents.forEach(function (endEvent) {\n      addEventListener(node, endEvent, eventListener);\n    });\n  },\n\n  removeEndEventListener: function removeEndEventListener(node, eventListener) {\n    if (endEvents.length === 0) {\n      return;\n    }\n    endEvents.forEach(function (endEvent) {\n      removeEventListener(node, endEvent, eventListener);\n    });\n  }\n};\n\nexports.default = ReactTransitionEvents;"]},"metadata":{},"sourceType":"script"}